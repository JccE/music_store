.slideshow {
  grid-column: 1/-1;
  grid-row: 2/3;
// define slide relative to its parent
  position: relative;
  width: 100%;
  height: 80vh;

  &-slide {
    // when we use absolute, slides are placed on each other
    position: absolute;
    top: 0;
    left: 0;
    // inherit slideshow w and h
    width:inherit;
    height:inherit;
    // hide by default
    visibility:hidden;
    opacity: 0;
    // run slideshow infinite times
    animation: slideshow 20s linear infinite;

    img {
      width:inherit;
      height:inherit;
      object-fit: cover;
    }
  }

  &-content {
    background-color: rgba(color(secondary), .8);
    // places text on image
    position: absolute;
    // positions content in bottom left
    bottom: 6rem;
    left: 6rem;
    max-width: 40rem;
    padding: 5rem;

    h2 {
      font-size: size(xl) + 1.2rem;
      color: color(primary);
    }

    p {
      margin: 1rem 0;
      font-size: size(sm);
    }
  }
}


// define individual slide times
.slideshow-slide:nth-child(1) {
  // for first slide, we need no delay
  animation-delay: 0s;
};
.slideshow-slide:nth-child(2) {
  animation-delay: 4s;
};
.slideshow-slide:nth-child(3) {
  animation-delay: 8s;
};
.slideshow-slide:nth-child(4) {
  animation-delay: 12s;
};
.slideshow-slide:nth-child(5) {
  animation-delay: 16s;
};

// over all 4 sec display. 0% to 100% of the 4 sec time
// after @keyframes has been defined, define animation prop in &-slide
@keyframes slideshow {
  // create fade effect
  0% {
    visibility:hidden;
    opacity: 0;
  }
  2% {
    visibility: visible;
    opacity: 1;
  }
  18% {
    visibility: visible;
    opacity: 1;
  }
  20% {
    visibility:hidden;
    opacity: 0;
  }
  100% {
    visibility:hidden;
    opacity: 0;
  }
}
